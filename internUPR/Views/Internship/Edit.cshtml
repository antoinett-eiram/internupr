@model internUPR.Models.Internship

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar</h2>


@using (Html.BeginForm("Edit", "Internship", new { model = Model}, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Internados</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.internID)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.departmentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @* @Html.EditorFor(model => model.departmentID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.departmentID, new SelectList(
                  new List<Object>{
                       new { value = "Administración de Empresas" , text = "Administración de Empresas"  },
                       new { value = "Biología" , text = "Biología" },
                       new { value = "Ciencias de Computadoras" , text = "Ciencias de Computadoras"},
                       new { value = 3 , text = "Ciencias Sociales" },
                       new { value = 4 , text = "Educación Física Adaptada" },
                       new { value = 5 , text = "Electrónica" },
                       new { value = 6 , text = "Español" },
                       new { value = 7 , text = "Física" },
                       new { value = 8 , text = "Humanidades" },
                       new { value = 9 , text = "Ingeniería y Tecnologías de Ingeniería" },
                       new { value = 10 , text = "Inglés" },
                       new { value = 11 , text = "Matemáticas" },
                       new { value = 12 , text = "Pedagogía" },
                       new { value = 13 , text = "Química" },
                       new { value = 14 , text = "Sistemas de Oficina" },
                       new { value = 15 , text = "Seleccione..."}

                    },
                  "value",
                  "text",
            15));
                @Html.ValidationMessageFor(model => model.departmentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.position, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.requirement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.requirement, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.requirement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.company, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.company, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.company, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contactName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contactName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contactName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.coemail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.coemail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.coemail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
           @*userid will only be displayed, user won't be able to edit*@
            @Html.LabelFor(model => model.userId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
